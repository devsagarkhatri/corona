{"version":3,"sources":["Header/Header.jsx","InfoTab/Infotab.jsx","CityTable/CityTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","state","className","style","marginTop","fontFamily","FormControl","textAlign","Select","variant","onChange","this","props","onStateChange","value","current","states","map","MenuItem","name","Component","InfoTab","title","data","color","Card","minWidth","borderRadius","CardContent","Typography","Number","toLocaleString","CityTable","cityName","temp","componentDidMount","setState","getData","console","log","cityList","districtData","stateCode","Object","entries","key","attribute","attr_value","push","confirmed","active","recovered","search","textToSearch","city","filter","toString","toLowerCase","includes","searchStates","undefined","scope","cases","onClick","event","onClickStateChange","App","useState","stateDataList","setStateDataList","currentState","setCurrentState","districtList","setDistrictList","useEffect","a","fetch","then","response","json","statewise","death","getStateData","target","display","justifyContent","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.553d1e94.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\n\nclass Header extends Component {\n    state = {  }\n    render() {\n        \n        return (\n            <div className=\"app_header\" style={{ marginTop: \"2px\" }}>\n                \n                <h1 style={{fontFamily: \"Montserrat Subrayada , sans-serif\"}}>Corona Tracker</h1>\n                <FormControl>\n                    <small style={{textAlign:\"right\"}}><i>Currently Viewing</i></small>\n                    <Select\n                        variant=\"standard\"\n                        \n                        onChange={this.props.onStateChange}\n                        value={this.props.current}\n                    >                        \n                        {this.props.states.map((state) => (\n                            <MenuItem value={state.name} key={state.name}>\n                                {state.name === \"Total\" ? \"India\" : state.name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport \"./infotab.css\";\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nclass InfoTab extends Component {\n    state = {  }\n    render() {\n        var { title, data, color } = this.props;\n        return (\n            \n            <Card className={\"infotab_card bg-transparent border-start border-end border-\"+color} style={{minWidth:\"25%\",borderRadius:\"15px\"}}>\n                    <CardContent>\n                        <Typography className=\"infotab_card_heading\" color=\"textSecondary\">\n                            {title}\n                        </Typography>\n                        <h2 className=\"infotab_card_figures\">{Number(data).toLocaleString()}</h2>\n                    </CardContent>\n                </Card>\n                \n            \n         );\n    }\n}\n \nexport default InfoTab;","import React, { Component } from 'react';\nimport { Select } from '@material-ui/core';\nimport \"./../CityTable/citytable.css\";\n\nclass CityTable extends Component {\n    \n    state = {\n        cityName: [],\n        temp:[]\n    }\n    \n    componentDidMount=()=>{\n        if ( this.props.state!=='Total')  {\n            this.setState({ cityName: this.getData });\n            console.log(this.getData);\n        }\n        else {\n            this.setState({ cityName:this.props.cityList });\n        }\n    }\n\n    getData = () => {        \n        var {districtData,stateCode}  = this.props.cityList;        \n        var cityName = [{}];\n        for (const [key, value] of Object.entries(districtData)) {               // cityName.push({ key, value });\n            var temp = [];\n            for (const [attribute,attr_value] of Object.entries(value)) {\n                if (attribute === 'active' || attribute === 'confirmed' || attribute === 'recovered') {\n                    temp.push(attr_value);                        \n                }                    \n            }\n            cityName.push({ key:key,confirmed:temp[1],active:temp[0],recovered:temp[2] });\n            // this.setState({cityName:this.state.cityName.push({ key:key,confirmed:temp[1],active:temp[0],recovered:temp[2]  })}); // console.log(cityName);\n        }        \n        return cityName;\n    }\n\n    search=(textToSearch)=>{\n        var city = [];\n        city = this.getData().filter((search) => {\n            // console.log(textToSearch);\n            var temp = \"\"+search['key'];\n            if (temp.toString().toLowerCase().includes(textToSearch.toLowerCase())) {\n                return search;    \n            }            \n        });\n        this.setState({cityName:city});        \n    }\n\n    searchStates = (textToSearch) => {\n        var city = this.props.cityList;\n        city = city.filter((search) => {\n            var temp = \"\" + search['name'];\n            if (temp.toString().toLowerCase().includes(textToSearch.toLowerCase())) {\n                return search;    \n            }\n        });\n        this.setState({cityName:city});\n    }\n    render() {\n        if (this.props.cityList !== undefined) {\n            if (this.props.state !== 'Total') {\n                var cityName = this.getData();\n                return (\n                    <div className=\"col-lg-12 col-sm-12 col-md-12\">\n                        {/* <input type=\"text\" className=\"form form-control bg-transparent border-0 border-bottom border-dark col-lg-4 col-md-4 col-sm-12\" id=\"myInput\" onChange={(event)=>this.search(event.target.value)} placeholder={\"Search in \"+this.props.state}/> */}\n                        <table className=\"table table-hover table-responsive\">                        \n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Districts</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th scope=\"col\">Active</th>\n                                    <th scope=\"col\">Recovered</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"table-borderless\">                    \n                                {\n                                    cityName.map(({confirmed,key,active,recovered}) => (                                            \n                                        <tr key={key} className=\"border-0 border-bottom border-secondary\">\n                                            <td>{key}</td>\n                                            <td>{confirmed}</td>\n                                            <td>{active}</td>\n                                            <td>{recovered}</td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                );    \n            }\n            else {\n                return (\n                    <div className=\"table-height col-lg-12 col-sm-12 col-md-12\">\n                        {/* <input type=\"text\" className=\"form form-control bg-transparent border-0 border-bottom border-dark col-lg-4 col-md-4 col-sm-12\" id=\"myInput\" onChange={(event)=>this.searchStates(event.target.value)} placeholder=\"Search in India\"/> */}\n                        <table className=\"table table-hover table-responsive\">\n                            <thead className=\"border-0 border-bottom border-dark\">\n                                <tr>\n                                    <th scope=\"col\">States<small> ( Click on the state to know more )</small></th>\n                                    <th scope=\"col\">Total</th>\n                                    <th scope=\"col\">Active</th>\n                                    <th scope=\"col\">Recovered</th>\n                                </tr>\n                            </thead>\n                            <tbody>                    \n                                {\n                                    this.props.cityList.map(({ cases, name, active, recovered }) => (                                        \n                                        <tr key={name} className=\"border-0 border-bottom border-secondary\" onClick={(event)=>this.props.onClickStateChange(name)}\n                                        >\n                                            <td>{name}</td>\n                                            <td>{cases}</td>\n                                            <td>{active}</td>\n                                            <td>{recovered}</td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                );\n            }                        \n        }    \n    }\n}\n \nexport default CityTable;","import Header from './Header/Header';\nimport InfoTab from './InfoTab/Infotab';\nimport CityTable from './CityTable/CityTable';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.css\";\n\nfunction App() {\n  const [stateDataList, setStateDataList] = useState([]);\n  const [state, setState] = useState('Total');\n  const [currentState, setCurrentState] = useState([]);\n  const [districtList, setDistrictList] = useState([]);\n  useEffect(() => {\n    const getStateData = async () => {\n      await fetch(\"https://api.covid19india.org/data.json\")//https://api.covid19india.org/state_district_wise.json\n        .then((response) => response.json())\n        .then((data) => {          \n          const stateDataList = data.statewise.map((state) => ({\n            name: state.state,\n            cases: state.confirmed,\n            active:state.active,\n            death: state.death,\n            recovered:state.recovered\n          }));          \n          setStateDataList(stateDataList);\n          setCurrentState(stateDataList[0]);\n        })\n    };\n    getStateData();\n  }, []);\n\n  useEffect(() => {\n    const getStateData = async () => {\n      await fetch(\"https://api.covid19india.org/state_district_wise.json\")\n        .then((response) => response.json())\n        .then((data) => {          \n          setDistrictList(data);// console.log(data);\n        })\n    };\n    getStateData();\n  }, []);\n  const onStateChange = (event) => {\n    setState(event.target.value);\n    var temp = stateDataList.filter(states => states.name === event.target.value);    \n    setCurrentState(temp[0]);\n  };\n  const onClickStateChange = (data) => {\n    console.log(data);\n    setState(data);\n    var temp = stateDataList.filter(states => states.name === data);    \n    setCurrentState(temp[0]);\n  };\n  const excludeTotal = () => {\n    return stateDataList.filter((search) => {\n      var temp = \"\" + search['name'];\n      if (!temp.toString().toLowerCase().includes('Total'.toLowerCase()) &&\n          !temp.toString().toLowerCase().includes('State Unassigned'.toLowerCase())) {\n          return search;    \n      }\n    });\n  };\n  return (    \n    <div className=\"App container\">\n      <br/>\n      <Header states={stateDataList} current={state} onStateChange={onStateChange}/>\n      <div className=\"app_header\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n        <InfoTab title=\"Total Cases\" data={currentState.cases} color=\"primary\"/>\n        <InfoTab title=\"Currently Active\" data={currentState.active} color=\"danger\" />\n        <InfoTab title=\"Total Recovery\" data={currentState.recovered} color=\"success\"/>\n      </div>\n      <div className=\"\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        {\n          state!=='Total'? (<CityTable cityList={districtList[state]} state={state} />) :(<CityTable cityList={excludeTotal()} state={state} onClickStateChange={onClickStateChange}/>)\n        }\n      </div>\n      \n      <center>If you liked this project, checkout my other projects <a href=\"https://devsagarkhatri.github.io/\">here.</a></center><br />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}